@mixin canonical-p-buttons {
  .p-button--accordion {
    background: {
      color: inherit;
      position: top 50% left $sph--large;
      repeat: no-repeat;
    }

    border: none;
    justify-content: flex-start;
    margin-bottom: 0;
    padding-left: 2.75rem;
    padding-right: $sph--large;
    transition-duration: 0s;
    width: 100%;
    z-index: 2;
    // aria-selected controls the open and closed state for the accordion tab
    &[aria-expanded="true"] {
      @include vf-icon-minus($color-mid-dark);

      background-size: 0.75rem;
    }

    &[aria-expanded="false"] {
      @include vf-icon-plus($color-mid-dark);

      background-size: 0.75rem;
    }

    @media (max-width: $breakpoint-large - 1) {
      background-position: top 50% left 0;
      padding-left: 1.75rem;
    }
  }

  .p-button--outline {
    @extend %vf-button-base;

    border-color: $color-x-light;
    color: $color-x-light;

    &:visited {
      color: $color-x-light;
    }

    &:hover,
    &:active:hover {
      background-color: rgba($color-mid-x-light, 0.2);
    }
  }

  .js-button--add {
    @extend %p-button--positive-light;

    align-items: center;
    display: flex;
    justify-content: space-between;
    margin-bottom: 1rem;
    text-align: left;
    width: 100%;

    i {
      @include vf-icon-plus($color-x-light);

      top: 0;
      width: 0.7rem;
    }
  }

  .js-button--remove {
    @extend %vf-button-base;

    background-color: transparent;
    border: none;
    border-radius: 50%;
    height: 2rem;
    position: absolute;
    right: -0.8rem;
    top: 0.2rem;
    width: auto;

    & > .p-icon--close {
      height: map-get(
        $line-heights,
        default-text
      ); // so height matches that of text inside buttons

      margin-left: -#{$sph--small};
      top: -1px;

      &:only-child {
        margin-right: -#{$sph--small};
      }

      + * {
        margin-left: $sph--small;
      }
    }

    i {
      @include vf-icon-close($color-x-light);
    }

    &:hover {
      background-color: $color-negative;
    }
  }
}
