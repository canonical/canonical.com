name: PR checks
on: pull_request
env:
  SECRET_KEY: insecure_test_key
  HARVEST_API_KEY: local_development_fake_key
  APPLICATION_CRYPTO_SECRET_KEY: insecure_test_key
  SERVICE_ACCOUNT_EMAIL: test_email@email.com
  SERVICE_ACCOUNT_PRIVATE_KEY: test_private_key

jobs:
  run-image:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Build image
        run: DOCKER_BUILDKIT=1 docker build --tag canonical-com .

      - name: Run image
        run: |
          docker run --detach --env SECRET_KEY=insecure_secret_key  --env APPLICATION_CRYPTO_SECRET_KEY=insecure_secret_key --env SERVICE_ACCOUNT_EMAIL=test_email@email.com --env SERVICE_ACCOUNT_PRIVATE_KEY=test_private_key --network host canonical-com
          sleep 1
          curl --head --fail --retry-delay 1 --retry 30 --retry-connrefused http://localhost

  run-dotrun:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Install dotrun
        run: sudo pip3 install dotrun requests==2.31.0
          
      - name: Install dependencies
        run: |
          sudo chmod -R 777 .
          dotrun --release 1.1.0-rc2 install

      - name: Build assets
        run: dotrun --release 1.1.0-rc2 build

      - name: Test site
        run: dotrun --release 1.1.0-rc2 serve & curl --head --fail --retry-delay 1 --retry 30 --retry-connrefused http://localhost:8002

  lint-scss:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: yarn install --immutable

      - name: Lint scss
        run: yarn lint-scss

  lint-python:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Install node dependencies
        run: yarn install --immutable

      - name: Install python dependencies
        run: |
          python3 -m pip install --upgrade pip
          sudo pip3 install flake8 black

      - name: Lint python
        run: yarn lint-python

  lint-jinja:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Install node dependencies
        run: yarn install --immutable

      - name: Install python dependencies
        run: |
          python3 -m pip install --upgrade pip
          sudo pip3 install djlint

      - name: Get changed HTML files in the templates folder
        id: changed-files
        uses: tj-actions/changed-files@v43
        with:
          files: templates/**

      - name: Lint jinja
        if: steps.changed-files.outputs.any_changed == 'true'
        env:
          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          echo "The following files have changed: $CHANGED_FILES"
          djlint $CHANGED_FILES --lint

  test-python:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Install requirements
        run: |
          sudo apt-get update && sudo apt-get install --yes python3-setuptools
          sudo pip3 install -r requirements.txt

      - name: Install dependencies
        run: sudo pip3 install coverage

      - name: Install node dependencies
        run: yarn install --immutable

      - name: Build resources
        run: yarn build

      - name: Run tests with coverage
        run: |
          coverage run  --source=. -m unittest discover tests
          bash <(curl -s https://codecov.io/bash) -cF python

  test-javascript:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: yarn install --immutable

      - name: Lint scss
        run: yarn test-js

  inclusive-naming-check:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: woke
        uses: canonical-web-and-design/inclusive-naming@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-check
          fail-on-error: true
